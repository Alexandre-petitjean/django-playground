[tool.poetry]
name = "django_playground"
version = "0.1.0"
description = "A Playground to test new thing !"
authors = ["Alexandre Petitjean <alexandre.petitjean@itsf.io>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"

# Base
# ------------------------------------------------------------------------------
python-slugify="^8.0.4"  # https://github.com/un33k/python-slugify
Pillow="^10.4.0"  # https://github.com/python-pillow/Pillow
rcssmin="^1.1.2"  # https://github.com/ndparker/rcssmin
argon2-cffi="^23.1.0"  # https://github.com/hynek/argon2_cffi
whitenoise="^6.7.0"  # https://github.com/evansd/whitenoise
redis="^5.0.8"  # https://github.com/redis/redis-py
hiredis="^3.0.0"  # https://github.com/redis/hiredis-py

# Django
# ------------------------------------------------------------------------------
django = "5.0.9"  # pyup: < 5.1  # https://www.djangoproject.com/
django-environ = "^0.11.2"    # https://github.com/joke2k/django-environ
django-model-utils = "^5.0.0"  # https://github.com/jazzband/django-model-utils
django-allauth = {version = "^64.2.1", extras = ["mfa"]}  # https://github.com/pennersr/django-allauth
django-crispy-forms = "^2.3"  # https://github.com/django-crispy-forms/django-crispy-forms
crispy-bootstrap5 = "^2024.2"  # https://github.com/django-crispy-forms/crispy-bootstrap5
django-compressor = "^4.5.1"  # https://github.com/django-compressor/django-compressor
django-redis = "^5.4.0"  # https://github.com/jazzband/django-redis

# Celery
# ------------------------------------------------------------------------------
celery = {extras = ["librabbitmq"], version = "^5.4.0"}  # https://github.com/celery/celery
django-celery-beat = "^2.7.0"  # https://github.com/celery/django-celery-beat
django-celery-results = "^2.5.1" # https://github.com/celery/django-celery-results
flower = "^2.0.1"  # https://github.com/mher/flower

[tool.poetry.group.dev.dependencies]
# Base
# ------------------------------------------------------------------------------
watchdog="^4.0.2" # https://github.com/gorakhargosh/watchdog
Werkzeug = {version = "^3.0.4", extras = ["watchdog"]}  # https://github.com/pallets/werkzeug
ipdb="^0.13.13"  # https://github.com/gotcha/ipdb
psycopg = {version = "^3.2.1", extras = ["c"]}  # https://github.com/psycopg/psycopg
watchfiles = "^0.24.0"  # https://github.com/samuelcolvin/watchfiles

# Testing
# ------------------------------------------------------------------------------
mypy="^1.11.2"  # https://github.com/python/mypy
django-stubs = {version = "^5.0.4", extras = ["compatible-mypy"]}  # https://github.com/typeddjango/django-stubs
pytest="^8.3.3"  # https://github.com/pytest-dev/pytest
pytest-sugar="^1.0.0"  # https://github.com/Frozenball/pytest-sugar

# Documentation
# ------------------------------------------------------------------------------
sphinx="^7.4.7"  # https://github.com/sphinx-doc/sphinx
sphinx-autobuild="^2024.9.3" # https://github.com/GaretJax/sphinx-autobuild

# Code quality
# ------------------------------------------------------------------------------
ruff="^0.6.8"  # https://github.com/astral-sh/ruff
coverage="^7.6.1"  # https://github.com/nedbat/coveragepy
djlint="^1.35.2"  # https://github.com/Riverside-Healthcare/djLint
pre-commit="^3.8.0"  # https://github.com/pre-commit/pre-commit

# Django
# ------------------------------------------------------------------------------
factory-boy="^3.3.1"  # https://github.com/FactoryBoy/factory_boy
django-debug-toolbar="^4.4.6"  # https://github.com/jazzband/django-debug-toolbar
django-extensions="^3.2.3"  # https://github.com/django-extensions/django-extensions
django-coverage-plugin="^3.1.0"  # https://github.com/nedbat/django_coverage_plugin
pytest-django="^4.9.0"  # https://github.com/pytest-dev/pytest-django
faker = "^28.4.1"  # https://github.com/joke2k/faker
django-migration-vis = "^2.0.1" # https://github.com/hartwork/django-migration-vis

[tool.poetry.group.prod.dependencies]
# Base
# ------------------------------------------------------------------------------

gunicorn = "^23.0.0" # https://github.com/benoitc/gunicorn
psycopg = {version = "^3.2.1", extras = ["c"]}  # https://github.com/psycopg/psycopg

# Django
# ------------------------------------------------------------------------------
django-anymail="^11.1"  # https://github.com/anymail/django-anymail

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["django_playground/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.ruff]
target-version = "py312"
# Exclude a variety of commonly ignored directories.
extend-exclude = [
    "*/migrations/*.py",
    "staticfiles/*",
]

# Allow lines to be as long as 119. Base is 88.
line-length = 119

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF",
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "UP038", # Checks for uses of isinstance/issubclass that take a tuple
          # of types for comparison.
          # Deactivated because it can make the code slow:
          # https://github.com/astral-sh/ruff/issues/7871
]
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    "UP038",
]

[tool.ruff.lint.isort]
force-single-line = true
